name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11]
        include:
          - python-version: 3.10
            torch-version: "2.0.0"
          - python-version: 3.11
            torch-version: "2.1.0"

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install development dependencies
      run: |
        pip install -r requirements.txt[dev]
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check --diff .
    
    - name: Type check with mypy
      run: |
        mypy . --ignore-missing-imports
    
    - name: Test data generation
      run: |
        python LLM_Diffrential_Privacy.py --encrypt-data --records 10 --dp-data-eps 1.0
        python LLM_Diffrential_Privacy.py --list-data
    
    - name: Test model training (small scale)
      run: |
        python LLM_Diffrential_Privacy.py --train --records 5 --epochs 1 --batch_size 1 --seq-len 128
        python LLM_Diffrential_Privacy.py --list
    
    - name: Test model querying
      run: |
        python LLM_Diffrential_Privacy.py --query --prompt "What is differential privacy?"
      continue-on-error: true  # May fail if no model exists
    
    - name: Test cleanup
      run: |
        python LLM_Diffrential_Privacy.py --clean

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety bandit
    
    - name: Security scan with safety
      run: |
        safety check --json --output safety-report.json || true
        cat safety-report.json
    
    - name: Security scan with bandit
      run: |
        bandit -r . -f json -o bandit-report.json || true
        cat bandit-report.json

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  documentation:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install sphinx sphinx-rtd-theme
    
    - name: Build documentation
      run: |
        # Create basic documentation structure if it doesn't exist
        mkdir -p docs
        echo "# LLM Differential Privacy Documentation" > docs/index.md
        echo "This is the documentation for the LLM Differential Privacy project." >> docs/index.md
    
    - name: Upload documentation
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: docs/

  performance:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install memory-profiler psutil
    
    - name: Performance test - data generation
      run: |
        time python LLM_Diffrential_Privacy.py --encrypt-data --records 50 --dp-data-eps 1.0
    
    - name: Performance test - model training
      run: |
        time python LLM_Diffrential_Privacy.py --train --records 20 --epochs 1 --batch_size 1 --seq-len 128
    
    - name: Memory usage test
      run: |
        python -m memory_profiler LLM_Diffrential_Privacy.py --encrypt-data --records 10
