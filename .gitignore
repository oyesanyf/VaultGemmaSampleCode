# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
dp_env/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate jetbrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws
.idea/
*.iml
*.ipr
*.iws

# VS Code
.vscode/
*.code-workspace

# Local History for Visual Studio Code
.history/

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.tmp
*.temp
*.swp
*.swo
*~

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# Project-specific files
# Data files (contains sensitive PHI/PII)
data/ORIGINAL_phi_data_*.csv
data/DP_ENCRYPTED_phi_data_*.csv
data/synthetic_phi_data_*.csv
data/QA_pairs_*.csv

# Model files (large binary files)
models/
*.bin
*.safetensors
*.pt
*.pth
*.ckpt

# Hugging Face cache
.cache/
huggingface/

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# Logs
*.log
logs/

# Temporary files
tmp/
temp/
*.tmp
*.temp

# OS generated files
.DS_Store?
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE files
*.swp
*.swo
*~

# Backup files
*.bak
*.backup
*.old

# Security and secrets
.env
.env.local
.env.*.local
secrets.json
config.json
*.key
*.pem
*.crt
*.p12

# Performance and profiling
*.prof
*.profile
*.pstats

# Memory dumps
*.dmp
*.hprof

# Coverage reports
htmlcov/
.coverage
coverage.xml
*.cover

# Test artifacts
.pytest_cache/
.tox/
.nox/

# Documentation builds
docs/_build/
docs/build/

# Package builds
build/
dist/
*.egg-info/

# Virtual environments
venv/
env/
ENV/
dp_env/
.venv/
.env/

# PyCharm
.idea/

# VS Code
.vscode/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Local configuration
local_config.py
config_local.py
settings_local.py

# Database files
*.db
*.sqlite
*.sqlite3

# Large files that shouldn't be in version control
*.zip
*.tar.gz
*.rar
*.7z

# Machine learning specific
checkpoints/
runs/
wandb/
mlruns/
.neptune/

# Differential Privacy specific
privacy_reports/
dp_analysis/
sensitivity_analysis/

# Model evaluation results
evaluation_results/
model_metrics/
performance_logs/

# Generated documentation
docs/generated/
api_docs/

# Local test data
test_data/
sample_data/
demo_data/

# Configuration files with sensitive data
config.ini
settings.ini
secrets.ini
